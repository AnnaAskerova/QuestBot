package ru.coffeecoders.questbot.models;

import com.pengrad.telegrambot.model.request.InlineKeyboardMarkup;
import ru.coffeecoders.questbot.entities.Game;
import ru.coffeecoders.questbot.keyboards.viewers.GamesViewerKeyboard;

import java.util.List;

/**
 * @author ezuykow
 */
public class GamesViewPage {

    private String text;
    private InlineKeyboardMarkup keyboard;

    private GamesViewPage(List<Game> games) {
        createText(games);
        createKeyboard(games);
    }

    //-----------------API START-----------------

    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä {@link GamesViewPage}
     * @param games —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–≥—Ä
     * @return —Å–æ–±—Ä–∞–Ω–Ω—ã–π {@link GamesViewPage}
     * @author ezuykow
     */
    public static GamesViewPage createPage(List<Game> games) {
        return new GamesViewPage(games);
    }

    /**
     * @return {@code GamesViewPage.text} - —Ç–µ–∫—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     * @author ezuykow
     */
    public String getText() {
        return text;
    }

    /**
     * @return {@code GamesViewPage.keyboard} - –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
     * @author ezuykow
     */
    public InlineKeyboardMarkup getKeyboard() {
        return keyboard;
    }

    //-----------------API END-----------------

    /**
     * @author ezuykow
     */
    private void createText(List<Game> games) {
        StringBuilder sb = new StringBuilder();
        sb.append("üé≤–°–æ–∑–¥–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã:\n\n");
        for (int i = 0; i < games.size(); i++) {
            sb.append(i+1).append(". ")
                    .append(games.get(i).getGameName()).append(";\n");
        }
        text = sb.toString();
    }

    /**
     * @author ezuykow
     */
    private void createKeyboard(List<Game> games) {
        keyboard = GamesViewerKeyboard.createKeyboard(games);
    }

}
